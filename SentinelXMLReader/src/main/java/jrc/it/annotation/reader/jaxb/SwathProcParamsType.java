//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.03.05 at 04:36:39 PM CET 
//


package jrc.it.annotation.reader.jaxb;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Processing parameters. This record contains the range and azimuth processing parameters used to process each input swath in the image. 
 * 
 * <p>Java class for swathProcParamsType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="swathProcParamsType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="swath" type="{}swathType"/>
 *         &lt;element name="rangeProcessing" type="{}processingParametersType"/>
 *         &lt;element name="azimuthProcessing" type="{}processingParametersType"/>
 *         &lt;element name="processorScalingFactor" type="{}float"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "swathProcParamsType", propOrder = {
    "swath",
    "rangeProcessing",
    "azimuthProcessing",
    "processorScalingFactor"
})
public class SwathProcParamsType {

    @XmlElement(required = true)
    protected SwathType swath;
    @XmlElement(required = true)
    protected ProcessingParametersType rangeProcessing;
    @XmlElement(required = true)
    protected ProcessingParametersType azimuthProcessing;
    @XmlElement(required = true)
    protected Float processorScalingFactor;

    /**
     * Gets the value of the swath property.
     * 
     * @return
     *     possible object is
     *     {@link SwathType }
     *     
     */
    public SwathType getSwath() {
        return swath;
    }

    /**
     * Sets the value of the swath property.
     * 
     * @param value
     *     allowed object is
     *     {@link SwathType }
     *     
     */
    public void setSwath(SwathType value) {
        this.swath = value;
    }

    /**
     * Gets the value of the rangeProcessing property.
     * 
     * @return
     *     possible object is
     *     {@link ProcessingParametersType }
     *     
     */
    public ProcessingParametersType getRangeProcessing() {
        return rangeProcessing;
    }

    /**
     * Sets the value of the rangeProcessing property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProcessingParametersType }
     *     
     */
    public void setRangeProcessing(ProcessingParametersType value) {
        this.rangeProcessing = value;
    }

    /**
     * Gets the value of the azimuthProcessing property.
     * 
     * @return
     *     possible object is
     *     {@link ProcessingParametersType }
     *     
     */
    public ProcessingParametersType getAzimuthProcessing() {
        return azimuthProcessing;
    }

    /**
     * Sets the value of the azimuthProcessing property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProcessingParametersType }
     *     
     */
    public void setAzimuthProcessing(ProcessingParametersType value) {
        this.azimuthProcessing = value;
    }

    /**
     * Gets the value of the processorScalingFactor property.
     * 
     * @return
     *     possible object is
     *     {@link Float }
     *     
     */
    public Float getProcessorScalingFactor() {
        return processorScalingFactor;
    }

    /**
     * Sets the value of the processorScalingFactor property.
     * 
     * @param value
     *     allowed object is
     *     {@link Float }
     *     
     */
    public void setProcessorScalingFactor(Float value) {
        this.processorScalingFactor = value;
    }

}
