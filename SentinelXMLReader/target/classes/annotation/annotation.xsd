<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="product">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="adsHeader"/>
        <xs:element ref="qualityInformation"/>
        <xs:element ref="generalAnnotation"/>
        <xs:element ref="imageAnnotation"/>
        <xs:element ref="dopplerCentroid"/>
        <xs:element ref="antennaPattern"/>
        <xs:element ref="swathTiming"/>
        <xs:element ref="geolocationGrid"/>
        <xs:element ref="coordinateConversion"/>
        <xs:element ref="swathMerging"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="adsHeader">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="missionId"/>
        <xs:element ref="productType"/>
        <xs:element ref="polarisation"/>
        <xs:element ref="mode"/>
        <xs:element ref="swath"/>
        <xs:element ref="startTime"/>
        <xs:element ref="stopTime"/>
        <xs:element ref="absoluteOrbitNumber"/>
        <xs:element ref="missionDataTakeId"/>
        <xs:element ref="imageNumber"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="missionId" type="xs:NCName"/>
  <xs:element name="productType" type="xs:NCName"/>
  <xs:element name="polarisation" type="xs:NCName"/>
  <xs:element name="mode" type="xs:NCName"/>
  <xs:element name="startTime" type="xs:NMTOKEN"/>
  <xs:element name="stopTime" type="xs:NMTOKEN"/>
  <xs:element name="absoluteOrbitNumber" type="xs:integer"/>
  <xs:element name="missionDataTakeId" type="xs:integer"/>
  <xs:element name="imageNumber" type="xs:integer"/>
  <xs:element name="qualityInformation">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="productQualityIndex"/>
        <xs:element ref="qualityDataList"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="productQualityIndex" type="xs:double"/>
  <xs:element name="qualityDataList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="qualityData"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="qualityData">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="downlinkQuality"/>
        <xs:element ref="rawDataAnalysisQuality"/>
        <xs:element ref="dopplerCentroidQuality"/>
        <xs:element ref="imageQuality"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="downlinkQuality">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="iInputDataMean"/>
        <xs:element ref="qInputDataMean"/>
        <xs:element ref="inputDataMeanOutsideNominalRangeFlag"/>
        <xs:element ref="iInputDataStdDev"/>
        <xs:element ref="qInputDataStdDev"/>
        <xs:element ref="inputDataStDevOutsideNominalRangeFlag"/>
        <xs:element ref="numDownlinkInputDataGaps"/>
        <xs:element ref="downlinkGapsInInputDataSignificantFlag"/>
        <xs:element ref="numDownlinkInputMissingLines"/>
        <xs:element ref="downlinkMissingLinesSignificantFlag"/>
        <xs:element ref="numInstrumentInputDataGaps"/>
        <xs:element ref="instrumentGapsInInputDataSignificantFlag"/>
        <xs:element ref="numInstrumentInputMissingLines"/>
        <xs:element ref="instrumentMissingLinesSignificantFlag"/>
        <xs:element ref="numSsbErrorInputDataGaps"/>
        <xs:element ref="ssbErrorGapsInInputDataSignificantFlag"/>
        <xs:element ref="numSsbErrorInputMissingLines"/>
        <xs:element ref="ssbErrorMissingLinesSignificantFlag"/>
        <xs:element ref="chirpSourceUsed"/>
        <xs:element ref="pgSourceUsed"/>
        <xs:element ref="rrfSpectrumUsed"/>
        <xs:element ref="replicaReconstructionFailedFlag"/>
        <xs:element ref="meanPgProductAmplitude"/>
        <xs:element ref="stdDevPgProductAmplitude"/>
        <xs:element ref="meanPgProductPhase"/>
        <xs:element ref="stdDevPgProductPhase"/>
        <xs:element ref="pgProductDerivationFailedFlag"/>
        <xs:element ref="invalidDownlinkParamsFlag"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="iInputDataMean" type="xs:double"/>
  <xs:element name="qInputDataMean" type="xs:double"/>
  <xs:element name="inputDataMeanOutsideNominalRangeFlag" type="xs:boolean"/>
  <xs:element name="iInputDataStdDev" type="xs:double"/>
  <xs:element name="qInputDataStdDev" type="xs:double"/>
  <xs:element name="inputDataStDevOutsideNominalRangeFlag" type="xs:boolean"/>
  <xs:element name="numDownlinkInputDataGaps" type="xs:integer"/>
  <xs:element name="downlinkGapsInInputDataSignificantFlag" type="xs:boolean"/>
  <xs:element name="numDownlinkInputMissingLines" type="xs:integer"/>
  <xs:element name="downlinkMissingLinesSignificantFlag" type="xs:boolean"/>
  <xs:element name="numInstrumentInputDataGaps" type="xs:integer"/>
  <xs:element name="instrumentGapsInInputDataSignificantFlag" type="xs:boolean"/>
  <xs:element name="numInstrumentInputMissingLines" type="xs:integer"/>
  <xs:element name="instrumentMissingLinesSignificantFlag" type="xs:boolean"/>
  <xs:element name="numSsbErrorInputDataGaps" type="xs:integer"/>
  <xs:element name="ssbErrorGapsInInputDataSignificantFlag" type="xs:boolean"/>
  <xs:element name="numSsbErrorInputMissingLines" type="xs:integer"/>
  <xs:element name="ssbErrorMissingLinesSignificantFlag" type="xs:boolean"/>
  <xs:element name="chirpSourceUsed" type="xs:NCName"/>
  <xs:element name="pgSourceUsed" type="xs:NCName"/>
  <xs:element name="rrfSpectrumUsed" type="xs:string"/>
  <xs:element name="replicaReconstructionFailedFlag" type="xs:boolean"/>
  <xs:element name="meanPgProductAmplitude" type="xs:double"/>
  <xs:element name="stdDevPgProductAmplitude" type="xs:double"/>
  <xs:element name="meanPgProductPhase" type="xs:double"/>
  <xs:element name="stdDevPgProductPhase" type="xs:double"/>
  <xs:element name="pgProductDerivationFailedFlag" type="xs:boolean"/>
  <xs:element name="invalidDownlinkParamsFlag" type="xs:boolean"/>
  <xs:element name="rawDataAnalysisQuality">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="iBias"/>
        <xs:element ref="iBiasSignificanceFlag"/>
        <xs:element ref="qBias"/>
        <xs:element ref="qBiasSignificanceFlag"/>
        <xs:element ref="iqGainImbalance"/>
        <xs:element ref="iqGainSignificanceFlag"/>
        <xs:element ref="iqQuadratureDeparture"/>
        <xs:element ref="iqQuadratureDepartureSignificanceFlag"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="iBiasSignificanceFlag" type="xs:boolean"/>
  <xs:element name="qBiasSignificanceFlag" type="xs:boolean"/>
  <xs:element name="iqGainSignificanceFlag" type="xs:boolean"/>
  <xs:element name="iqQuadratureDepartureSignificanceFlag" type="xs:boolean"/>
  <xs:element name="dopplerCentroidQuality">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dcMethod"/>
        <xs:element ref="dopplerCentroidUncertainFlag"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="dopplerCentroidUncertainFlag" type="xs:boolean"/>
  <xs:element name="imageQuality">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="imageStatistics"/>
        <xs:element ref="outputDataMeanOutsideNominalRangeFlag"/>
        <xs:element ref="outputDataStDevOutsideNominalRangeFlag"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="outputDataMeanOutsideNominalRangeFlag" type="xs:boolean"/>
  <xs:element name="outputDataStDevOutsideNominalRangeFlag" type="xs:boolean"/>
  <xs:element name="generalAnnotation">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="productInformation"/>
        <xs:element ref="downlinkInformationList"/>
        <xs:element ref="orbitList"/>
        <xs:element ref="attitudeList"/>
        <xs:element ref="rawDataAnalysisList"/>
        <xs:element ref="replicaInformationList"/>
        <xs:element ref="noiseList"/>
        <xs:element ref="terrainHeightList"/>
        <xs:element ref="azimuthFmRateList"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="productInformation">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="pass"/>
        <xs:element ref="timelinessCategory"/>
        <xs:element ref="platformHeading"/>
        <xs:element ref="projection"/>
        <xs:element ref="rangeSamplingRate"/>
        <xs:element ref="radarFrequency"/>
        <xs:element ref="azimuthSteeringRate"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="pass" type="xs:NCName"/>
  <xs:element name="timelinessCategory" type="xs:NCName"/>
  <xs:element name="platformHeading" type="xs:double"/>
  <xs:element name="projection" type="xs:string"/>
  <xs:element name="rangeSamplingRate" type="xs:double"/>
  <xs:element name="radarFrequency" type="xs:double"/>
  <xs:element name="azimuthSteeringRate" type="xs:double"/>
  <xs:element name="downlinkInformationList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="downlinkInformation"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="downlinkInformation">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="swath"/>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="firstLineSensingTime"/>
        <xs:element ref="lastLineSensingTime"/>
        <xs:element ref="prf"/>
        <xs:element ref="bitErrorCount"/>
        <xs:element ref="downlinkValues"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="firstLineSensingTime" type="xs:NMTOKEN"/>
  <xs:element name="lastLineSensingTime" type="xs:NMTOKEN"/>
  <xs:element name="prf" type="xs:double"/>
  <xs:element name="bitErrorCount">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="numErrSyncMarker"/>
        <xs:element ref="numErrDataTakeId"/>
        <xs:element ref="numErrEccNumber"/>
        <xs:element ref="numErrTestMode"/>
        <xs:element ref="numErrRxChannelId"/>
        <xs:element ref="numErrInstrumentConfigId"/>
        <xs:element ref="numErrPacketCount"/>
        <xs:element ref="numErrPriCount"/>
        <xs:element ref="numErrSsbErrorFlag"/>
        <xs:element ref="numErrBaqMode"/>
        <xs:element ref="numErrBaqBlockLength"/>
        <xs:element ref="numErrRangeDecimation"/>
        <xs:element ref="numErrRxGain"/>
        <xs:element ref="numErrTxRampRate"/>
        <xs:element ref="numErrTxPulseStartFrequency"/>
        <xs:element ref="numErrRank"/>
        <xs:element ref="numErrPri"/>
        <xs:element ref="numErrSwst"/>
        <xs:element ref="numErrSwl"/>
        <xs:element ref="numErrPolarisation"/>
        <xs:element ref="numErrTempComp"/>
        <xs:element ref="numErrElevationBeamAddress"/>
        <xs:element ref="numErrAzimuthBeamAddress"/>
        <xs:element ref="numErrSasTestMode"/>
        <xs:element ref="numErrCalType"/>
        <xs:element ref="numErrCalibrationBeamAddress"/>
        <xs:element ref="numErrCalMode"/>
        <xs:element ref="numErrTxPulseNumber"/>
        <xs:element ref="numErrSignalType"/>
        <xs:element ref="numErrSwapFlag"/>
        <xs:element ref="numErrSwathNumber"/>
        <xs:element ref="numErrNumberOfQuads"/>
        <xs:element ref="numIspHeaderErrors"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="numErrSyncMarker" type="xs:integer"/>
  <xs:element name="numErrDataTakeId" type="xs:integer"/>
  <xs:element name="numErrEccNumber" type="xs:integer"/>
  <xs:element name="numErrTestMode" type="xs:integer"/>
  <xs:element name="numErrRxChannelId" type="xs:integer"/>
  <xs:element name="numErrInstrumentConfigId" type="xs:integer"/>
  <xs:element name="numErrPacketCount" type="xs:integer"/>
  <xs:element name="numErrPriCount" type="xs:integer"/>
  <xs:element name="numErrSsbErrorFlag" type="xs:integer"/>
  <xs:element name="numErrBaqMode" type="xs:integer"/>
  <xs:element name="numErrBaqBlockLength" type="xs:integer"/>
  <xs:element name="numErrRangeDecimation" type="xs:integer"/>
  <xs:element name="numErrRxGain" type="xs:integer"/>
  <xs:element name="numErrTxRampRate" type="xs:integer"/>
  <xs:element name="numErrTxPulseStartFrequency" type="xs:integer"/>
  <xs:element name="numErrRank" type="xs:integer"/>
  <xs:element name="numErrPri" type="xs:integer"/>
  <xs:element name="numErrSwst" type="xs:integer"/>
  <xs:element name="numErrSwl" type="xs:integer"/>
  <xs:element name="numErrPolarisation" type="xs:integer"/>
  <xs:element name="numErrTempComp" type="xs:integer"/>
  <xs:element name="numErrElevationBeamAddress" type="xs:integer"/>
  <xs:element name="numErrAzimuthBeamAddress" type="xs:integer"/>
  <xs:element name="numErrSasTestMode" type="xs:integer"/>
  <xs:element name="numErrCalType" type="xs:integer"/>
  <xs:element name="numErrCalibrationBeamAddress" type="xs:integer"/>
  <xs:element name="numErrCalMode" type="xs:integer"/>
  <xs:element name="numErrTxPulseNumber" type="xs:integer"/>
  <xs:element name="numErrSignalType" type="xs:integer"/>
  <xs:element name="numErrSwapFlag" type="xs:integer"/>
  <xs:element name="numErrSwathNumber" type="xs:integer"/>
  <xs:element name="numErrNumberOfQuads" type="xs:integer"/>
  <xs:element name="numIspHeaderErrors" type="xs:integer"/>
  <xs:element name="downlinkValues">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="pri"/>
        <xs:element ref="rank"/>
        <xs:element ref="dataTakeId"/>
        <xs:element ref="eccNumber"/>
        <xs:element ref="rxChannelId"/>
        <xs:element ref="instrumentConfigId"/>
        <xs:element ref="dataFormat"/>
        <xs:element ref="rangeDecimation"/>
        <xs:element ref="rxGain"/>
        <xs:element ref="txPulseLength"/>
        <xs:element ref="txPulseStartFrequency"/>
        <xs:element ref="txPulseRampRate"/>
        <xs:element ref="swathNumber"/>
        <xs:element ref="swlList"/>
        <xs:element ref="swstList"/>
        <xs:element ref="pointingStatusList"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="pri" type="xs:double"/>
  <xs:element name="rank" type="xs:integer"/>
  <xs:element name="dataTakeId" type="xs:integer"/>
  <xs:element name="eccNumber" type="xs:integer"/>
  <xs:element name="rxChannelId" type="xs:integer"/>
  <xs:element name="instrumentConfigId" type="xs:integer"/>
  <xs:element name="dataFormat">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="baqBlockLength"/>
        <xs:element ref="echoFormat"/>
        <xs:element ref="noiseFormat"/>
        <xs:element ref="calibrationFormat"/>
        <xs:element ref="meanBitRate"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="baqBlockLength" type="xs:integer"/>
  <xs:element name="echoFormat" type="xs:string"/>
  <xs:element name="noiseFormat" type="xs:string"/>
  <xs:element name="calibrationFormat" type="xs:NCName"/>
  <xs:element name="meanBitRate" type="xs:double"/>
  <xs:element name="rangeDecimation">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="decimationFilterBandwidth"/>
        <xs:element ref="samplingFrequencyAfterDecimation"/>
        <xs:element ref="filterLength"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="decimationFilterBandwidth" type="xs:double"/>
  <xs:element name="samplingFrequencyAfterDecimation" type="xs:double"/>
  <xs:element name="filterLength" type="xs:integer"/>
  <xs:element name="rxGain" type="xs:double"/>
  <xs:element name="txPulseLength" type="xs:double"/>
  <xs:element name="txPulseStartFrequency" type="xs:double"/>
  <xs:element name="txPulseRampRate" type="xs:double"/>
  <xs:element name="swathNumber" type="xs:integer"/>
  <xs:element name="swlList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="swl"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="swl">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="value"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="swstList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="swst"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="swst">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="value"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="pointingStatusList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="pointingStatus"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="pointingStatus">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="aocsOpMode"/>
        <xs:element ref="rollErrorFlag"/>
        <xs:element ref="pitchErrorFlag"/>
        <xs:element ref="yawErrorFlag"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="aocsOpMode" type="xs:string"/>
  <xs:element name="rollErrorFlag" type="xs:boolean"/>
  <xs:element name="pitchErrorFlag" type="xs:boolean"/>
  <xs:element name="yawErrorFlag" type="xs:boolean"/>
  <xs:element name="orbitList">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="orbit"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="orbit">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="time"/>
        <xs:element ref="frame"/>
        <xs:element ref="position"/>
        <xs:element ref="velocity"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="time" type="xs:NMTOKEN"/>
  <xs:element name="frame" type="xs:NCName"/>
  <xs:element name="position">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="x"/>
        <xs:element ref="y"/>
        <xs:element ref="z"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="velocity">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="x"/>
        <xs:element ref="y"/>
        <xs:element ref="z"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="attitudeList">
    <xs:complexType>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="rawDataAnalysisList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="rawDataAnalysis"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="rawDataAnalysis">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="iBias"/>
        <xs:element ref="qBias"/>
        <xs:element ref="iqQuadratureDeparture"/>
        <xs:element ref="iqGainImbalance"/>
        <xs:element ref="support"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="support">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="iBiasUpperBound"/>
        <xs:element ref="iBiasLowerBound"/>
        <xs:element ref="qBiasUpperBound"/>
        <xs:element ref="qBiasLowerBound"/>
        <xs:element ref="iqGainUpperBound"/>
        <xs:element ref="iqGainLowerBound"/>
        <xs:element ref="iqQuadratureDepartureUpperBound"/>
        <xs:element ref="iqQuadratureDepartureLowerBound"/>
        <xs:element ref="iBiasUsedForCorrection"/>
        <xs:element ref="qBiasUsedForCorrection"/>
        <xs:element ref="iqGainImbalanceUsedForCorrection"/>
        <xs:element ref="iqQuadratureDepartureUsedForCorrection"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="iBiasUpperBound" type="xs:double"/>
  <xs:element name="iBiasLowerBound" type="xs:double"/>
  <xs:element name="qBiasUpperBound" type="xs:double"/>
  <xs:element name="qBiasLowerBound" type="xs:double"/>
  <xs:element name="iqGainUpperBound" type="xs:double"/>
  <xs:element name="iqGainLowerBound" type="xs:double"/>
  <xs:element name="iqQuadratureDepartureUpperBound" type="xs:double"/>
  <xs:element name="iqQuadratureDepartureLowerBound" type="xs:double"/>
  <xs:element name="iBiasUsedForCorrection" type="xs:double"/>
  <xs:element name="qBiasUsedForCorrection" type="xs:double"/>
  <xs:element name="iqGainImbalanceUsedForCorrection" type="xs:double"/>
  <xs:element name="iqQuadratureDepartureUsedForCorrection" type="xs:double"/>
  <xs:element name="replicaInformationList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="replicaInformation"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="replicaInformation">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="swath"/>
        <xs:element ref="referenceReplica"/>
        <xs:element ref="replicaList"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="referenceReplica">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="chirpSource"/>
        <xs:element ref="pgSource"/>
        <xs:element ref="amplitudeCoefficients"/>
        <xs:element ref="phaseCoefficients"/>
        <xs:element ref="timeDelay"/>
        <xs:element ref="gain"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="amplitudeCoefficients">
    <xs:complexType>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="phaseCoefficients">
    <xs:complexType>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="timeDelay" type="xs:double"/>
  <xs:element name="gain">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="re"/>
        <xs:element ref="im"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="replicaList">
    <xs:complexType>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="noiseList">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="noise"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="noise">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="swath"/>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="noisePowerCorrectionFactor"/>
        <xs:element ref="numberOfNoiseLines"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="noisePowerCorrectionFactor" type="xs:double"/>
  <xs:element name="numberOfNoiseLines" type="xs:integer"/>
  <xs:element name="terrainHeightList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="terrainHeight"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="azimuthFmRateList">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="azimuthFmRate"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="azimuthFmRate">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="t0"/>
        <xs:element ref="c0"/>
        <xs:element ref="c1"/>
        <xs:element ref="c2"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="c0" type="xs:double"/>
  <xs:element name="c1" type="xs:double"/>
  <xs:element name="c2" type="xs:double"/>
  <xs:element name="imageAnnotation">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="imageInformation"/>
        <xs:element ref="processingInformation"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="imageInformation">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="productFirstLineUtcTime"/>
        <xs:element ref="productLastLineUtcTime"/>
        <xs:element ref="ascendingNodeTime"/>
        <xs:element ref="anchorTime"/>
        <xs:element ref="productComposition"/>
        <xs:element ref="sliceNumber"/>
        <xs:element ref="sliceList"/>
        <xs:element ref="slantRangeTime"/>
        <xs:element ref="pixelValue"/>
        <xs:element ref="outputPixels"/>
        <xs:element ref="rangePixelSpacing"/>
        <xs:element ref="azimuthPixelSpacing"/>
        <xs:element ref="azimuthTimeInterval"/>
        <xs:element ref="azimuthFrequency"/>
        <xs:element ref="numberOfSamples"/>
        <xs:element ref="numberOfLines"/>
        <xs:element ref="zeroDopMinusAcqTime"/>
        <xs:element ref="incidenceAngleMidSwath"/>
        <xs:element ref="imageStatistics"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="productFirstLineUtcTime" type="xs:NMTOKEN"/>
  <xs:element name="productLastLineUtcTime" type="xs:NMTOKEN"/>
  <xs:element name="ascendingNodeTime" type="xs:NMTOKEN"/>
  <xs:element name="anchorTime" type="xs:NMTOKEN"/>
  <xs:element name="productComposition" type="xs:NCName"/>
  <xs:element name="sliceNumber" type="xs:integer"/>
  <xs:element name="sliceList">
    <xs:complexType>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="pixelValue" type="xs:NCName"/>
  <xs:element name="outputPixels" type="xs:string"/>
  <xs:element name="rangePixelSpacing" type="xs:double"/>
  <xs:element name="azimuthPixelSpacing" type="xs:double"/>
  <xs:element name="azimuthTimeInterval" type="xs:double"/>
  <xs:element name="azimuthFrequency" type="xs:double"/>
  <xs:element name="numberOfSamples" type="xs:integer"/>
  <xs:element name="numberOfLines" type="xs:integer"/>
  <xs:element name="zeroDopMinusAcqTime" type="xs:double"/>
  <xs:element name="incidenceAngleMidSwath" type="xs:double"/>
  <xs:element name="processingInformation">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="rawDataAnalysisUsed"/>
        <xs:element ref="orbitDataFileUsed"/>
        <xs:element ref="attitudeDataFileUsed"/>
        <xs:element ref="rxVariationCorrectionApplied"/>
        <xs:element ref="antennaElevationPatternApplied"/>
        <xs:element ref="antennaAzimuthPatternApplied"/>
        <xs:element ref="antennaAzimuthElementPatternApplied"/>
        <xs:element ref="dcMethod"/>
        <xs:element ref="dcInputData"/>
        <xs:element ref="rangeSpreadingLossCompensationApplied"/>
        <xs:element ref="srgrConversionApplied"/>
        <xs:element ref="detectionPerformed"/>
        <xs:element ref="thermalNoiseCorrectionPerformed"/>
        <xs:element ref="chirpSource"/>
        <xs:element ref="pgSource"/>
        <xs:element ref="rrfSpectrum"/>
        <xs:element ref="applicationLutId"/>
        <xs:element ref="swathProcParamsList"/>
        <xs:element ref="inputDimensionsList"/>
        <xs:element ref="referenceRange"/>
        <xs:element ref="ellipsoidName"/>
        <xs:element ref="ellipsoidSemiMajorAxis"/>
        <xs:element ref="ellipsoidSemiMinorAxis"/>
        <xs:element ref="bistaticDelayCorrectionApplied"/>
        <xs:element ref="topsFilterConvention"/>
        <xs:element ref="orbitSource"/>
        <xs:element ref="attitudeSource"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="rawDataAnalysisUsed" type="xs:boolean"/>
  <xs:element name="orbitDataFileUsed" type="xs:boolean"/>
  <xs:element name="attitudeDataFileUsed" type="xs:boolean"/>
  <xs:element name="rxVariationCorrectionApplied" type="xs:boolean"/>
  <xs:element name="antennaElevationPatternApplied" type="xs:boolean"/>
  <xs:element name="antennaAzimuthPatternApplied" type="xs:boolean"/>
  <xs:element name="antennaAzimuthElementPatternApplied" type="xs:boolean"/>
  <xs:element name="dcInputData" type="xs:string"/>
  <xs:element name="rangeSpreadingLossCompensationApplied" type="xs:boolean"/>
  <xs:element name="srgrConversionApplied" type="xs:boolean"/>
  <xs:element name="detectionPerformed" type="xs:boolean"/>
  <xs:element name="thermalNoiseCorrectionPerformed" type="xs:boolean"/>
  <xs:element name="rrfSpectrum" type="xs:string"/>
  <xs:element name="applicationLutId" type="xs:NCName"/>
  <xs:element name="swathProcParamsList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="swathProcParams"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="swathProcParams">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="swath"/>
        <xs:element ref="rangeProcessing"/>
        <xs:element ref="azimuthProcessing"/>
        <xs:element ref="processorScalingFactor"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="rangeProcessing">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="windowType"/>
        <xs:element ref="windowCoefficient"/>
        <xs:element ref="totalBandwidth"/>
        <xs:element ref="processingBandwidth"/>
        <xs:element ref="lookBandwidth"/>
        <xs:element ref="numberOfLooks"/>
        <xs:element ref="lookOverlap"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="azimuthProcessing">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="windowType"/>
        <xs:element ref="windowCoefficient"/>
        <xs:element ref="totalBandwidth"/>
        <xs:element ref="processingBandwidth"/>
        <xs:element ref="lookBandwidth"/>
        <xs:element ref="numberOfLooks"/>
        <xs:element ref="lookOverlap"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="processorScalingFactor" type="xs:double"/>
  <xs:element name="inputDimensionsList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="inputDimensions"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="inputDimensions">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="swath"/>
        <xs:element ref="numberOfInputSamples"/>
        <xs:element ref="numberOfInputLines"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="numberOfInputSamples" type="xs:integer"/>
  <xs:element name="numberOfInputLines" type="xs:integer"/>
  <xs:element name="referenceRange" type="xs:double"/>
  <xs:element name="ellipsoidName" type="xs:NCName"/>
  <xs:element name="ellipsoidSemiMajorAxis" type="xs:double"/>
  <xs:element name="ellipsoidSemiMinorAxis" type="xs:double"/>
  <xs:element name="bistaticDelayCorrectionApplied" type="xs:boolean"/>
  <xs:element name="topsFilterConvention" type="xs:string"/>
  <xs:element name="orbitSource" type="xs:NCName"/>
  <xs:element name="attitudeSource" type="xs:NCName"/>
  <xs:element name="dopplerCentroid">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dcEstimateList"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="dcEstimateList">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="dcEstimate"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="dcEstimate">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="t0"/>
        <xs:element ref="geometryDcPolynomial"/>
        <xs:element ref="dataDcPolynomial"/>
        <xs:element ref="dataDcRmsError"/>
        <xs:element ref="dataDcRmsErrorAboveThreshold"/>
        <xs:element ref="fineDceAzimuthStartTime"/>
        <xs:element ref="fineDceAzimuthStopTime"/>
        <xs:element ref="fineDceList"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="geometryDcPolynomial">
    <xs:complexType mixed="true">
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="dataDcPolynomial">
    <xs:complexType mixed="true">
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="dataDcRmsError" type="xs:double"/>
  <xs:element name="dataDcRmsErrorAboveThreshold" type="xs:boolean"/>
  <xs:element name="fineDceAzimuthStartTime" type="xs:NMTOKEN"/>
  <xs:element name="fineDceAzimuthStopTime" type="xs:NMTOKEN"/>
  <xs:element name="fineDceList">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="fineDce"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="fineDce">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="slantRangeTime"/>
        <xs:element ref="frequency"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="frequency" type="xs:double"/>
  <xs:element name="swathTiming">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="linesPerBurst"/>
        <xs:element ref="samplesPerBurst"/>
        <xs:element ref="burstList"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="linesPerBurst" type="xs:integer"/>
  <xs:element name="samplesPerBurst" type="xs:integer"/>
  <xs:element name="burstList">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="burst"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="burst">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="azimuthAnxTime"/>
        <xs:element ref="sensingTime"/>
        <xs:element ref="byteOffset"/>
        <xs:element ref="firstValidSample"/>
        <xs:element ref="lastValidSample"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="azimuthAnxTime" type="xs:double"/>
  <xs:element name="sensingTime" type="xs:NMTOKEN"/>
  <xs:element name="byteOffset" type="xs:integer"/>
  <xs:element name="firstValidSample">
    <xs:complexType mixed="true">
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="lastValidSample">
    <xs:complexType mixed="true">
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="geolocationGrid">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="geolocationGridPointList"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="geolocationGridPointList">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="geolocationGridPoint"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="geolocationGridPoint">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="slantRangeTime"/>
        <xs:element ref="line"/>
        <xs:element ref="pixel"/>
        <xs:element ref="latitude"/>
        <xs:element ref="longitude"/>
        <xs:element ref="height"/>
        <xs:element ref="incidenceAngle"/>
        <xs:element ref="elevationAngle"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="line" type="xs:integer"/>
  <xs:element name="pixel" type="xs:integer"/>
  <xs:element name="latitude" type="xs:double"/>
  <xs:element name="longitude" type="xs:double"/>
  <xs:element name="height" type="xs:double"/>
  <xs:element name="coordinateConversion">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="coordinateConversionList"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="coordinateConversionList">
    <xs:complexType>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="swathMerging">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="swathMergeList"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="swathMergeList">
    <xs:complexType>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="swath" type="xs:NCName"/>
  <xs:element name="azimuthTime" type="xs:NMTOKEN"/>
  <xs:element name="iBias" type="xs:double"/>
  <xs:element name="qBias" type="xs:double"/>
  <xs:element name="iqGainImbalance" type="xs:double"/>
  <xs:element name="iqQuadratureDeparture" type="xs:double"/>
  <xs:element name="dcMethod" type="xs:string"/>
  <xs:element name="imageStatistics">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="outputDataMean"/>
        <xs:element ref="outputDataStdDev"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="outputDataMean">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="re"/>
        <xs:element ref="im"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="outputDataStdDev">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="re"/>
        <xs:element ref="im"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="value" type="xs:double"/>
  <xs:element name="x" type="xs:double"/>
  <xs:element name="y" type="xs:double"/>
  <xs:element name="z" type="xs:double"/>
  <xs:element name="chirpSource" type="xs:NCName"/>
  <xs:element name="pgSource" type="xs:NCName"/>
  <xs:element name="re" type="xs:double"/>
  <xs:element name="im" type="xs:double"/>
  <xs:element name="terrainHeight">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="azimuthTime"/>
        <xs:element ref="value"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="t0" type="xs:double"/>
  <xs:element name="slantRangeTime">
    <xs:complexType mixed="true">
      <xs:attribute name="count" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="windowType" type="xs:NCName"/>
  <xs:element name="windowCoefficient" type="xs:double"/>
  <xs:element name="totalBandwidth" type="xs:double"/>
  <xs:element name="processingBandwidth" type="xs:double"/>
  <xs:element name="lookBandwidth" type="xs:double"/>
  <xs:element name="numberOfLooks" type="xs:integer"/>
  <xs:element name="lookOverlap" type="xs:double"/>
  <xs:element name="antennaPattern">
    <xs:complexType>
      <xs:sequence minOccurs="0">
        <xs:element ref="antennaPatternList"/>
        <xs:element ref="swath"/>
        <xs:element ref="azimuthTime"/>
        <xs:element ref="slantRangeTime"/>
        <xs:element ref="elevationAngle"/>
        <xs:element ref="elevationPattern"/>
        <xs:element ref="incidenceAngle"/>
        <xs:element ref="terrainHeight"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="antennaPatternList">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="antennaPattern"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="elevationPattern">
    <xs:complexType mixed="true">
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="incidenceAngle">
    <xs:complexType mixed="true">
      <xs:attribute name="count" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="elevationAngle">
    <xs:complexType mixed="true">
      <xs:attribute name="count" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
