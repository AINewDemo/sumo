//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.03.05 at 04:36:39 PM CET 
//


package jrc.it.annotation.reader.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for dataFormatModeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="dataFormatModeType">
 *   &lt;restriction base="{}string">
 *     &lt;enumeration value="Full 8 Bit"/>
 *     &lt;enumeration value="SM"/>
 *     &lt;enumeration value="FBAQ 2 Bit"/>
 *     &lt;enumeration value="FBAQ 3 Bit"/>
 *     &lt;enumeration value="FBAQ 4 Bit"/>
 *     &lt;enumeration value="FBAQ 5 Bit"/>
 *     &lt;enumeration value="None"/>
 *     &lt;enumeration value="FDBAQ"/>
 *     &lt;enumeration value="BAQ 3 Bit"/>
 *     &lt;enumeration value="BAQ 4 Bit"/>
 *     &lt;enumeration value="BAQ 5 Bit"/>
 *     &lt;enumeration value="Decimation"/>
 *     &lt;enumeration value="Bypass"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "dataFormatModeType")
@XmlEnum
public enum DataFormatModeType {

    @XmlEnumValue("Full 8 Bit")
    FULL_8_BIT("Full 8 Bit"),
    SM("SM"),
    @XmlEnumValue("FBAQ 2 Bit")
    FBAQ_2_BIT("FBAQ 2 Bit"),
    @XmlEnumValue("FBAQ 3 Bit")
    FBAQ_3_BIT("FBAQ 3 Bit"),
    @XmlEnumValue("FBAQ 4 Bit")
    FBAQ_4_BIT("FBAQ 4 Bit"),
    @XmlEnumValue("FBAQ 5 Bit")
    FBAQ_5_BIT("FBAQ 5 Bit"),
    @XmlEnumValue("None")
    NONE("None"),
    FDBAQ("FDBAQ"),
    @XmlEnumValue("BAQ 3 Bit")
    BAQ_3_BIT("BAQ 3 Bit"),
    @XmlEnumValue("BAQ 4 Bit")
    BAQ_4_BIT("BAQ 4 Bit"),
    @XmlEnumValue("BAQ 5 Bit")
    BAQ_5_BIT("BAQ 5 Bit"),
    @XmlEnumValue("Decimation")
    DECIMATION("Decimation"),
    @XmlEnumValue("Bypass")
    BYPASS("Bypass");
    private final String value;

    DataFormatModeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DataFormatModeType fromValue(String v) {
        for (DataFormatModeType c: DataFormatModeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
