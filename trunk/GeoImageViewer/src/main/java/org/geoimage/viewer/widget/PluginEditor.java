/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PluginEditor.java
 *
 * Created on Mar 8, 2010, 4:19:17 PM
 */
package org.geoimage.viewer.widget;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Enumeration;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileFilter;
import org.geoimage.viewer.core.Plugins;
import org.geoimage.viewer.core.api.IConsoleAction;
import org.geoimage.viewer.util.ClassPathHacker;

/**
 *
 * @author thoorfr
 */
public class PluginEditor extends javax.swing.JDialog {

    private Plugins plugin;
    private final DefaultListModel pluginmodel;

    /** Creates new form PluginEditor */
    public PluginEditor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        pluginmodel = new DefaultListModel();
        pluginList.setModel(pluginmodel);
        pluginList.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent lse) {
                pluginText.setText(""+pluginList.getSelectedValue());
            }
        });
    }

    public void setPlugin(Plugins p) {
        this.plugin = p;
        try {
            jarTextField.setText(new File(new URI(p.getJarUrl())).getAbsolutePath());
        } catch (URISyntaxException ex) {
            Logger.getLogger(PluginEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            parseJarFile();
        } catch (Exception ex) {
            Logger.getLogger(PluginEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
        pluginList.setSelectedValue(p.getClassName(), true);
    }

    public Plugins getPlugin() {
        return plugin;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jarTextField = new javax.swing.JTextField();
        chooseJarButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pluginList = new javax.swing.JList();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        pluginText = new javax.swing.JTextField();
        parseButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Jar Location:");
        jLabel1.setName("jLabel1"); // NOI18N

        jarTextField.setName("jarTextField"); // NOI18N

        chooseJarButton.setText("Choose...");
        chooseJarButton.setName("chooseJarButton"); // NOI18N
        chooseJarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseJarButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Plugin Entry:");
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        pluginList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        pluginList.setName("pluginList"); // NOI18N
        jScrollPane1.setViewportView(pluginList);

        okButton.setText("OK");
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        pluginText.setName("pluginText"); // NOI18N

        parseButton.setText("Parse Jar");
        parseButton.setName("parseButton"); // NOI18N
        parseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pluginText, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jarTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(parseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chooseJarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseJarButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pluginText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseJarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseJarButtonActionPerformed
        JFileChooser fc = new JFileChooser(jarTextField.getText());
        fc.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File file) {
                return file.getAbsolutePath().endsWith(".jar") || file.isDirectory();
            }

            @Override
            public String getDescription() {
                return "Jar Files";
            }
        });

        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            jarTextField.setText(fc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_chooseJarButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (plugin == null) {
            plugin = new Plugins();
        }
        plugin.setClassName(pluginText.getText());
        try {
            plugin.setJarUrl(new File(jarTextField.getText()).toURI().toURL().toString());
        } catch (MalformedURLException ex) {
            Logger.getLogger(PluginEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
        setVisible(false);
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void parseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parseButtonActionPerformed
        try {
            parseJarFile();
        } catch (Exception ex) {
            Logger.getLogger(PluginEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_parseButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                PluginEditor dialog = new PluginEditor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton chooseJarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jarTextField;
    private javax.swing.JButton okButton;
    private javax.swing.JButton parseButton;
    private javax.swing.JList pluginList;
    private javax.swing.JTextField pluginText;
    // End of variables declaration//GEN-END:variables

    private void parseJarFile() throws Exception {
        JarFile z = new JarFile(jarTextField.getText());
        ClassPathHacker.addFile(jarTextField.getText());
        Enumeration<JarEntry> e = z.entries();
        while (e.hasMoreElements()) {
            JarEntry ze = e.nextElement();
            //System.out.println(ze.getName());
            if (!ze.getName().endsWith(".class") || ze.getName().contains("$")) {
                continue;
            }
            try {
                Object c = Class.forName(ze.getName().replaceAll("/", ".").replace(".class", "")).newInstance();
                if (c instanceof IConsoleAction) {
                    pluginmodel.addElement(c.getClass().getCanonicalName());
                }
            } catch (Exception ex) {
                //Logger.getLogger(PluginEditor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
